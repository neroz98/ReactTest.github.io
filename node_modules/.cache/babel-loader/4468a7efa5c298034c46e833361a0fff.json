{"ast":null,"code":"import _classCallCheck from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tatyana/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tatyana/app/src/search/FilterableProductTable.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport ProductTable from './ProductTable';\n\nvar FilterableProductTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterableProductTable, _React$Component);\n\n  function FilterableProductTable(props) {\n    var _this;\n\n    _classCallCheck(this, FilterableProductTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterableProductTable).call(this, props)); // Устанавливаем значения по умолчанию для this.state.filterText и this.state.inStockOnly \n\n    _this.state = {\n      filterText: ''\n    }; // Передаем 'this' через .bind() в слушатели событий \n\n    _this.handleFilterTextInput = _this.handleFilterTextInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Слушатель событий меняет значение this.state.filterText \n\n\n  _createClass(FilterableProductTable, [{\n    key: \"handleFilterTextInput\",\n    value: function handleFilterTextInput(filterText) {\n      this.setState({\n        filterText: filterText\n      });\n    } // Отправляем на рендер сборку из комопонетов SearchBar и ProductTable передав в них необходимые реквизиты \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.products);\n      console.log(this.state.filterText);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        filterText: this.state.filterText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FilterableProductTable;\n}(React.Component);\n\nexport default FilterableProductTable;","map":{"version":3,"sources":["/Users/tatyana/app/src/search/FilterableProductTable.js"],"names":["React","SearchBar","ProductTable","FilterableProductTable","props","state","filterText","handleFilterTextInput","bind","setState","console","log","products","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,sB;;;;;AAEL,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,gGAAMA,KAAN,GADmB,CAElB;;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb,CAHkB,CAIlB;;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,uDAA7B;AALkB;AAMlB,G,CACD;;;;;0CACsBF,U,EAAY;AACjC,WAAKG,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEA;AAAd,OAAd;AACA,K,CACD;;;;6BACS;AACRI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,QAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,UAAvB;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AACC,QAAA,UAAU,EAAG,KAAKD,KAAL,CAAWC,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADA;AASA;;;;EA1BmCN,KAAK,CAACa,S;;AA4B3C,eAAeV,sBAAf","sourcesContent":["import React from 'react'\nimport SearchBar from './SearchBar'\nimport ProductTable from './ProductTable'\n\nclass FilterableProductTable extends React.Component { \n\n\tconstructor(props) { \n\tsuper(props); \n\t\t// Устанавливаем значения по умолчанию для this.state.filterText и this.state.inStockOnly \n\t\tthis.state = { filterText: ''}; \n\t\t// Передаем 'this' через .bind() в слушатели событий \n\t\tthis.handleFilterTextInput = this.handleFilterTextInput.bind(this);\n\t} \n\t// Слушатель событий меняет значение this.state.filterText \n\thandleFilterTextInput(filterText) { \n\t\tthis.setState({ filterText: filterText}); \n\t} \n\t// Отправляем на рендер сборку из комопонетов SearchBar и ProductTable передав в них необходимые реквизиты \n\trender() { \n\t\tconsole.log(this.props.products)\n\t\tconsole.log(this.state.filterText)\n\t\treturn ( \n\t\t<div> \n\t\t\t<SearchBar \n\t\t\t\tfilterText={ this.state.filterText }  \n\t\t\t/> \n\n\t\n\t\t</div> \n\t\t); \n\t} \n}\nexport default FilterableProductTable"]},"metadata":{},"sourceType":"module"}